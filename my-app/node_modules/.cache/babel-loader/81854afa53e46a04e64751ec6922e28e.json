{"ast":null,"code":"import * as types from './../constants/ActionTypes.js';\nimport * as config from './../constants/Config';\nlet inititalDefault = [{\n  id: 1,\n  name: 'reactjs',\n  status: 0\n}, {\n  id: 2,\n  name: 'html&css',\n  status: 1\n}];\nlet tasks = JSON.parse(localStorage.getItem(config.ITEMS_FROM_LOCAL_STOGARE));\ninititalDefault = tasks !== null && tasks.length > 0 ? tasks : inititalDefault;\n\nconst items = (state = inititalDefault, action) => {\n  let id = null;\n\n  switch (action.type) {\n    case types.DELETE_ITEM:\n      id = action.id;\n      remove(state, item => {\n        return item.id === id;\n      });\n  }\n};\n\nexport default items;","map":{"version":3,"sources":["/Users/thoanguyen/Downloads/react-training/React Zendvn/Chaper 2/todolist redux react 2/my-app/src/reducers/items.js"],"names":["types","config","inititalDefault","id","name","status","tasks","JSON","parse","localStorage","getItem","ITEMS_FROM_LOCAL_STOGARE","length","items","state","action","type","DELETE_ITEM","remove","item"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,+BAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;AACA,IAAIC,eAAe,GAAE,CACrB;AACCC,EAAAA,EAAE,EAAC,CADJ;AAECC,EAAAA,IAAI,EAAC,SAFN;AAGCC,EAAAA,MAAM,EAAC;AAHR,CADqB,EAMpB;AACAF,EAAAA,EAAE,EAAC,CADH;AAEAC,EAAAA,IAAI,EAAC,UAFL;AAGAC,EAAAA,MAAM,EAAC;AAHP,CANoB,CAArB;AAYA,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBT,MAAM,CAACU,wBAA5B,CAAX,CAAZ;AACAT,eAAe,GAAII,KAAK,KAAG,IAAR,IAAcA,KAAK,CAACM,MAAN,GAAa,CAA5B,GAAgCN,KAAhC,GAAsCJ,eAAxD;;AAEA,MAAMW,KAAK,GAAG,CAACC,KAAK,GAAEZ,eAAR,EAAyBa,MAAzB,KAAoC;AACjD,MAAIZ,EAAE,GAAG,IAAT;;AACA,UAAOY,MAAM,CAACC,IAAd;AACC,SAAKhB,KAAK,CAACiB,WAAX;AACAd,MAAAA,EAAE,GAAGY,MAAM,CAACZ,EAAZ;AACAe,MAAAA,MAAM,CAACJ,KAAD,EAAQK,IAAD,IAAQ;AAClB,eAAOA,IAAI,CAAChB,EAAL,KAAYA,EAAnB;AACF,OAFK,CAAN;AAHD;AAOA,CATD;;AAUA,eAAeU,KAAf","sourcesContent":["import * as types from './../constants/ActionTypes.js';\nimport * as config from './../constants/Config';\nlet inititalDefault =[\n{\n\tid:1,\n\tname:'reactjs',\n\tstatus:0\n},\n\t{\n\tid:2,\n\tname:'html&css',\n\tstatus:1\n}\n]; \nlet tasks = JSON.parse(localStorage.getItem(config.ITEMS_FROM_LOCAL_STOGARE));\ninititalDefault = (tasks!==null&&tasks.length>0)? tasks:inititalDefault;\n\nconst items = (state =inititalDefault ,action) => {\n\tlet id = null; \n\tswitch(action.type){\n\t\tcase types.DELETE_ITEM:\n\t\tid = action.id;\n\t\tremove(state,(item)=>{\n    \treturn item.id === id\n  });\n\t}\n}\nexport default items; "]},"metadata":{},"sourceType":"module"}