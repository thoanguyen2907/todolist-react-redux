{"ast":null,"code":"var _jsxFileName = \"/Users/thoanguyen/Downloads/react-training/React Zendvn/Chaper 2/todolist/my-app/src/components/Item.js\";\nimport React from 'react';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const item = this.props.item;\n    const index = this.props.index;\n    let elmLevel = React.createElement(\"span\", {\n      className: \"label label-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Active\");\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, index + 1), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, item.name), React.createElement(\"td\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.setLevelElement(item.status)), React.createElement(\"td\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-pencil mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), \"S\\u1EEDa\"), \"\\xA0\", React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-trash mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), \"X\\xF3a\")));\n  }\n\n  setLevelElement(status) {\n    let elmLevel = React.createElement(\"span\", {\n      className: \"label label-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Active\");\n\n    if (status === 0) {\n      elmLevel = React.createElement(\"span\", {\n        className: \"label label-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Inactive\");\n    } else {\n      elmLevel = React.createElement(\"span\", {\n        className: \"label label-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Active\");\n    }\n\n    return elmLevel;\n  }\n\n}\n\nexport default Item;","map":{"version":3,"sources":["/Users/thoanguyen/Downloads/react-training/React Zendvn/Chaper 2/todolist/my-app/src/components/Item.js"],"names":["React","Item","Component","constructor","props","render","item","index","elmLevel","name","setLevelElement","status"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,MAAOC,IAAP,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AAED;;AAECC,EAAAA,MAAM,GAAE;AACN,UAAMC,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAxB;AACA,UAAMC,KAAK,GAAG,KAAKH,KAAL,CAAWG,KAAzB;AACA,QAAIC,QAAQ,GAAG;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAf;AAGF,WAEkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,GAAC,CAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACG,IAAV,CAFF,EAGE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKC,eAAL,CAAqBJ,IAAI,CAACK,MAA1B,CAFH,CAHF,EAQE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,aADF,UAKE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,WALF,CARF,CAFlB;AAsBD;;AACDD,EAAAA,eAAe,CAACC,MAAD,EAAQ;AAEvB,QAAIH,QAAQ,GAAG;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAf;;AAEI,QAAGG,MAAM,KAAK,CAAd,EAAgB;AACdH,MAAAA,QAAQ,GAAG;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAX;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,GAAG;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAX;AACD;;AACD,WAAOA,QAAP;AACH;;AA7CmC;;AAkDpC,eAAeP,IAAf","sourcesContent":["import React from 'react';\n\n\n\nclass  Item extends React.Component {\n constructor(props){\n  super(props);\n\n}\n\n  render(){\n    const item = this.props.item;\n    const index = this.props.index;\n    let elmLevel = <span className=\"label label-default\">Active</span>;\n   \n\n  return (\n   \n                    <tr>\n                      <td>{index+1}</td>\n                      <td>{item.name}</td>\n                      <td className=\"text-center\">\n                        \n                        {this.setLevelElement(item.status)}\n                      \n                      </td>\n                      <td className=\"text-center\">\n                        <button type=\"button\" className=\"btn btn-warning\">\n                          <span className=\"fa fa-pencil mr-5\" />Sửa\n                        </button>\n                        &nbsp;\n                        <button type=\"button\" className=\"btn btn-danger\">\n                          <span className=\"fa fa-trash mr-5\" />Xóa\n                        </button>\n                      </td>\n                    </tr>\n\n  );\n}\nsetLevelElement(status){\n\nlet elmLevel = <span className=\"label label-default\">Active</span>; \n\n    if(status === 0){\n      elmLevel = <span className=\"label label-warning\">Inactive</span>\n    } else {\n      elmLevel = <span className=\"label label-success\">Active</span>\n    }\n    return elmLevel\n}\n}\n\n\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}