{"ast":null,"code":"var _jsxFileName = \"/Users/thoanguyen/Desktop/ReactZendvn/Chaper 2/todolist redux react 2/my-app/src/components/Item.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport isShowForm from './../reducers/isShowForm';\nimport itemSelected from './../reducers/itemSelected';\nimport { actOpenForm, actDeteleItem, actSelectedItem } from './../actions/index';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n  }\n\n  handleEdit(item) {\n    this.props.handleEdit(item);\n  }\n\n  onDelete(id) {\n    this.props.onDelete(id);\n  }\n\n  render() {\n    let _this$props = this.props,\n        item = _this$props.item,\n        index = _this$props.index;\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, index + 1), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, item.name), React.createElement(\"td\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.statusColor(item.status)), React.createElement(\"td\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleEdit(item),\n      type: \"button\",\n      className: \"btn btn-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-pencil mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), \"S\\u1EEDa\"), \"\\xA0\", React.createElement(\"button\", {\n      onClick: () => this.onDelete(item.id),\n      type: \"button\",\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-trash mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), \"X\\xF3a\")));\n  }\n\n  statusColor(status) {\n    let color = React.createElement(\"span\", {\n      className: \"badge badge-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Active\");\n\n    if (status === 0) {\n      color = React.createElement(\"span\", {\n        className: \"badge badge-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"InActive\");\n    } else {\n      color = React.createElement(\"span\", {\n        className: \"badge badge-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Active\");\n    }\n\n    return color;\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    items: state.items,\n    isShowForm: state.isShowForm,\n    itemSelected: state.itemSelected\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    handleEdit: item => {\n      dispatch(actOpenForm());\n      dispatch(actSelectedItem(item));\n    },\n    onDelete: id => {\n      dispatch(actDeteleItem(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","map":{"version":3,"sources":["/Users/thoanguyen/Desktop/ReactZendvn/Chaper 2/todolist redux react 2/my-app/src/components/Item.js"],"names":["React","connect","isShowForm","itemSelected","actOpenForm","actDeteleItem","actSelectedItem","Item","Component","constructor","props","handleEdit","bind","onDelete","item","id","render","index","name","statusColor","status","color","mapStateToProps","state","items","mapDispatchToProps","dispatch","ownProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'; \nimport isShowForm from './../reducers/isShowForm';\nimport itemSelected from './../reducers/itemSelected'; \nimport {actOpenForm,actDeteleItem,actSelectedItem} from './../actions/index';\nclass  Item extends React.Component {\n  constructor(props){\n    super(props);\n    this.handleEdit = this.handleEdit.bind(this)\n    this.onDelete = this.onDelete.bind(this)\n  }\nhandleEdit(item){\n  this.props.handleEdit(item);\n}\nonDelete(id){\n  this.props.onDelete(id);\n}\n  render(){\n   let {item,index} = this.props; \n\n  return (\n   \n                    <tr>\n                      <td>{index+1}</td>\n                      <td>{item.name}</td>\n                      <td className=\"text-center\">\n                        \n                         {this.statusColor(item.status)}\n                      \n                      </td>\n                      <td className=\"text-center\">\n                        <button onClick={()=>this.handleEdit(item)}type=\"button\" className=\"btn btn-warning\">\n                          <span className=\"fa fa-pencil mr-5\" />Sửa\n                        </button>\n                        &nbsp;\n                        <button onClick={()=>this.onDelete(item.id)}type=\"button\" className=\"btn btn-danger\">\n                          <span className=\"fa fa-trash mr-5\" />Xóa\n                        </button>\n                      </td>\n                    </tr>\n\n  )\n}\n\nstatusColor(status){\n  let color = <span className=\"badge badge-success\">Active</span> \n  if(status===0){\n     color = <span className=\"badge badge-warning\">InActive</span> \n  }\n  else {\n   color = <span className=\"badge badge-success\">Active</span> \n  }\n  return color\n}\n}\nconst mapStateToProps = state => {\n  return {\n    items: state.items,\n    isShowForm:state.isShowForm,\n    itemSelected:state.itemSelected\n  }\n}\nconst mapDispatchToProps = (dispatch,ownProps) => {\n  return {\n    handleEdit: (item) =>{\n      dispatch(actOpenForm());\n      dispatch(actSelectedItem(item))\n    },\n    onDelete: (id) => {\n      dispatch(actDeteleItem(id))\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Item);\n\n"]},"metadata":{},"sourceType":"module"}