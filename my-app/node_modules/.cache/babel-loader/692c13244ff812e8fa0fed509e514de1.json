{"ast":null,"code":"import * as types from './../constants/ActionTypes.js';\nimport { remove, reject } from 'lodash';\nimport * as config from './../constants/Config';\n\nconst uuidv4 = require('uuid/v4');\n\nlet initialDefault = [];\nlet tasks = JSON.parse(localStorage.getItem(config.ITEMS_FROM_LOCAL_STOGARE));\ninitialDefault = tasks !== null && tasks.length > 0 ? tasks : initialDefault;\n\nconst items = (state = initialDefault, action) => {\n  let id = null;\n\n  switch (action.type) {\n    case types.DELETE_ITEM:\n      id = action.id;\n      remove(state, item => {\n        return item.id === id;\n      });\n      localStorage.setItem(config.ITEMS_FROM_LOCAL_STOGARE, JSON.stringify(state));\n      return [...state];\n\n    case types.SUBMIT_FORM:\n      let item = action.item;\n\n      if (item.id !== '') {\n        //edit\n        id = item.id;\n        state = reject(state, {\n          id: item.id\n        });\n      } else {\n        id = uuidv4();\n      }\n\n      state.push({\n        id: id,\n        name: item.name,\n        status: +item.status\n      });\n      localStorage.setItem(config.ITEMS_FROM_LOCAL_STOGARE, JSON.stringify(state));\n      return [...state];\n\n    default:\n      return state;\n  }\n};\n\nexport default items;","map":{"version":3,"sources":["/Users/thoanguyen/Desktop/React Zendvn/Chaper 2/todolist redux react 2/my-app/src/reducers/items.js"],"names":["types","remove","reject","config","uuidv4","require","initialDefault","tasks","JSON","parse","localStorage","getItem","ITEMS_FROM_LOCAL_STOGARE","length","items","state","action","id","type","DELETE_ITEM","item","setItem","stringify","SUBMIT_FORM","push","name","status"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,+BAAvB;AACA,SAAQC,MAAR,EAAeC,MAAf,QAA4B,QAA5B;AACA,OAAO,KAAKC,MAAZ,MAAwB,uBAAxB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAIC,cAAc,GAAG,EAArB;AACA,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBR,MAAM,CAACS,wBAA5B,CAAX,CAAZ;AACAN,cAAc,GAAIC,KAAK,KAAG,IAAR,IAAgBA,KAAK,CAACM,MAAN,GAAa,CAA9B,GAAkCN,KAAlC,GAA0CD,cAA3D;;AACA,MAAMQ,KAAK,GAAG,CAACC,KAAK,GAAGT,cAAT,EAAwBU,MAAxB,KAAmC;AAChD,MAAIC,EAAE,GAAG,IAAT;;AACA,UAAQD,MAAM,CAACE,IAAf;AACC,SAAKlB,KAAK,CAACmB,WAAX;AACAF,MAAAA,EAAE,GAACD,MAAM,CAACC,EAAV;AACChB,MAAAA,MAAM,CAACc,KAAD,EAAQK,IAAD,IAAQ;AACpB,eAAOA,IAAI,CAACH,EAAL,KAAYA,EAAnB;AACD,OAFM,CAAN;AAGFP,MAAAA,YAAY,CAACW,OAAb,CAAqBlB,MAAM,CAACS,wBAA5B,EAAqDJ,IAAI,CAACc,SAAL,CAAeP,KAAf,CAArD;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACC,SAAKf,KAAK,CAACuB,WAAX;AACA,UAAIH,IAAI,GAAGJ,MAAM,CAACI,IAAlB;;AACA,UAAGA,IAAI,CAACH,EAAL,KAAY,EAAf,EAAmB;AAAE;AACpBA,QAAAA,EAAE,GAAGG,IAAI,CAACH,EAAV;AACUF,QAAAA,KAAK,GAAEb,MAAM,CAACa,KAAD,EAAQ;AAAEE,UAAAA,EAAE,EAAEG,IAAI,CAACH;AAAX,SAAR,CAAb;AACJ,OAHP,MAGa;AACZA,QAAAA,EAAE,GAAGb,MAAM,EAAX;AACD;;AACAW,MAAAA,KAAK,CAACS,IAAN,CAAW;AACDP,QAAAA,EAAE,EAAQA,EADT;AAEDQ,QAAAA,IAAI,EAAML,IAAI,CAACK,IAFd;AAGDC,QAAAA,MAAM,EAAK,CAACN,IAAI,CAACM;AAHhB,OAAX;AAMDhB,MAAAA,YAAY,CAACW,OAAb,CAAqBlB,MAAM,CAACS,wBAA5B,EAAqDJ,IAAI,CAACc,SAAL,CAAeP,KAAf,CAArD;AACE,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACD;AACC,aAAOA,KAAP;AAzBF;AA4BA,CA9BD;;AA+BA,eAAeD,KAAf","sourcesContent":["import * as types from './../constants/ActionTypes.js';\nimport {remove,reject} from 'lodash';\nimport * as config from './../constants/Config';\nconst uuidv4 = require('uuid/v4');\nlet initialDefault = [];\nlet tasks = JSON.parse(localStorage.getItem(config.ITEMS_FROM_LOCAL_STOGARE));\ninitialDefault = (tasks!==null && tasks.length>0)? tasks : initialDefault;\nconst items = (state = initialDefault,action) => {\n\tlet id = null;\n\tswitch (action.type) {\n\t\tcase types.DELETE_ITEM:\t\n\t\tid=action.id\n  \tremove(state,(item)=>{\n    return item.id === id\n  });\n localStorage.setItem(config.ITEMS_FROM_LOCAL_STOGARE,JSON.stringify(state))\t\n\treturn [...state];\n\t\tcase types.SUBMIT_FORM:\t\n\t\tlet item = action.item;\n\t\tif(item.id !== '') { //edit\n\t\t\tid = item.id;\n             state= reject(state, { id: item.id});  \n        } else {\n\t\t\tid = uuidv4()\n\t}\n\t\tstate.push({\n            id      : id,\n            name    : item.name,\n            status   : +item.status\n        }) \n\n localStorage.setItem(config.ITEMS_FROM_LOCAL_STOGARE,JSON.stringify(state))\n\t\t\treturn [...state];\n\t\tdefault:\n\t\t\treturn state\n\t}\n\t\n}\nexport default items; "]},"metadata":{},"sourceType":"module"}