{"ast":null,"code":"var _jsxFileName = \"/Users/thoanguyen/Downloads/react-training/React Zendvn/Chaper 2/todolist redux react 2/my-app/src/components/Item.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport isShowForm from './../reducers/isShowForm';\nimport { actOpenForm } from './../actions/index';\n\nclass Item extends React.Component {\n  handleEdit() {\n    this.props.handleEdit();\n  }\n\n  render() {\n    let item = this.props.item;\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, item.id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, item.name), React.createElement(\"td\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.statusColor(item.status)), React.createElement(\"td\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleEdit,\n      type: \"button\",\n      className: \"btn btn-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-pencil mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), \"S\\u1EEDa\"), \"\\xA0\", React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-trash mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), \"X\\xF3a\")));\n  }\n\n  statusColor(status) {\n    let color = React.createElement(\"span\", {\n      className: \"badge badge-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Active\");\n\n    if (status === 0) {\n      color = React.createElement(\"span\", {\n        className: \"badge badge-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"InActive\");\n    } else {\n      color = React.createElement(\"span\", {\n        className: \"badge badge-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Active\");\n    }\n\n    return color;\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    items: state.items,\n    isShowForm: state.isShowForm\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    handleEdit: () => {\n      dispatch(actOpenForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","map":{"version":3,"sources":["/Users/thoanguyen/Downloads/react-training/React Zendvn/Chaper 2/todolist redux react 2/my-app/src/components/Item.js"],"names":["React","connect","isShowForm","actOpenForm","Item","Component","handleEdit","props","render","item","id","name","statusColor","status","color","mapStateToProps","state","items","mapDispatchToProps","dispatch","ownProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAAQC,WAAR,QAA0B,oBAA1B;;AACA,MAAOC,IAAP,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AACpCC,EAAAA,UAAU,GAAE;AACV,SAAKC,KAAL,CAAWD,UAAX;AACD;;AACCE,EAAAA,MAAM,GAAE;AACP,QAAIC,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAtB;AACD,WAEkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,EAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,IAAV,CAFF,EAGE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKC,WAAL,CAAiBH,IAAI,CAACI,MAAtB,CAFJ,CAHF,EAQE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKP,UAAtB;AAAiC,MAAA,IAAI,EAAC,QAAtC;AAA+C,MAAA,SAAS,EAAC,iBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,aADF,UAKE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,WALF,CARF,CAFlB;AAsBD;;AAEDM,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACjB,QAAIC,KAAK,GAAG;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAZ;;AACA,QAAGD,MAAM,KAAG,CAAZ,EAAc;AACXC,MAAAA,KAAK,GAAG;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAR;AACF,KAFD,MAGK;AACJA,MAAAA,KAAK,GAAG;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR;AACA;;AACD,WAAOA,KAAP;AACD;;AAvCmC;;AAyCpC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADR;AAELf,IAAAA,UAAU,EAACc,KAAK,CAACd;AAFZ,GAAP;AAID,CALD;;AAMA,MAAMgB,kBAAkB,GAAG,CAACC,QAAD,EAAUC,QAAV,KAAuB;AAChD,SAAO;AACLd,IAAAA,UAAU,EAAE,MAAK;AACfa,MAAAA,QAAQ,CAAChB,WAAW,EAAZ,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeF,OAAO,CAACc,eAAD,EAAiBG,kBAAjB,CAAP,CAA4Cd,IAA5C,CAAf","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux'; \nimport isShowForm from './../reducers/isShowForm';\nimport {actOpenForm} from './../actions/index';\nclass  Item extends React.Component {\nhandleEdit(){\n  this.props.handleEdit();\n}\n  render(){\n   let item = this.props.item; \n  return (\n   \n                    <tr>\n                      <td>{item.id}</td>\n                      <td>{item.name}</td>\n                      <td className=\"text-center\">\n                        \n                         {this.statusColor(item.status)}\n                      \n                      </td>\n                      <td className=\"text-center\">\n                        <button onClick={this.handleEdit}type=\"button\" className=\"btn btn-warning\">\n                          <span className=\"fa fa-pencil mr-5\" />Sửa\n                        </button>\n                        &nbsp;\n                        <button type=\"button\" className=\"btn btn-danger\">\n                          <span className=\"fa fa-trash mr-5\" />Xóa\n                        </button>\n                      </td>\n                    </tr>\n\n  )\n}\n\nstatusColor(status){\n  let color = <span className=\"badge badge-success\">Active</span> \n  if(status===0){\n     color = <span className=\"badge badge-warning\">InActive</span> \n  }\n  else {\n   color = <span className=\"badge badge-success\">Active</span> \n  }\n  return color\n}\n}\nconst mapStateToProps = state => {\n  return {\n    items: state.items,\n    isShowForm:state.isShowForm\n  }\n}\nconst mapDispatchToProps = (dispatch,ownProps) => {\n  return {\n    handleEdit: () =>{\n      dispatch(actOpenForm())\n    }\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Item);\n\n"]},"metadata":{},"sourceType":"module"}